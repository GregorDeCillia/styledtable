% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/createStyledCrossTableBody.R
\name{createStyledSubTable}
\alias{createStyledSubTable}
\title{Helper function that creates a styled sub table}
\usage{
createStyledSubTable(data, subLevel, subTableCols, subHeadingStylings = NULL,
  bodyStyling = NULL, yCols, xCols)
}
\arguments{
\item{data}{A data.frame that should be used for the creation of the cross table.}

\item{subLevel}{This is the recursive counter that gives the deepness of the recursive function execution. It points to the current sub heading level. So subLevel == 1 means that we look at the sub headings given by the different values in the data.frame column that has the name given in 'subTableCols[1]'.}

\item{subTableCols}{(optional) A vector of column names that should be used in order to separate the data.frame into several sub tables, that will be concatenated vertically. Each sub table will have a sub heading row above the sub table body. The sub heading text is just the corresponding value in the column defined by 'subTableCols'. If no sub heading should be introduced at all, the argument 'subTableCols' should be omitted. If the 'subTableCols' is vector with more than one column name, then a hirachy level is introduced for the sub headings, where the first column has the highest and the column given by the last entry in 'subTableCols' has the lowest hirachy level.}

\item{subHeadingStylings}{(optional) A list of styling functions. A styling function is a function that takes a styled table as its only argument and returns a styled function. The first styling function is applied to the level-1 sub heading (the sub heading defined by the first entry in 'subTableCols'), the second styling function is applied to the level-2 sub heading etc. Alternatively a single styling function can be passed into 'subHeadingStylings', in this case this styling function is applied to all sub heading levels.}

\item{bodyStyling}{(optional) A styling function that is applied to the generated styled body of each sub table. A styling function is a function that takes a styled table as its only argument and returns a styled function. In order to format the value columns of the resulting cross table use the argument 'valueColStylings'.}

\item{yCols}{A vector of column names that are unchanged by the cross table compuation. If the table should not be a cross table, but a normal table this argument can be omitted.}

\item{xCols}{(optional) A vector of column names that are used for column name generation by the cross table compuation. If the table should not be a cross table, but a normal table this argument can be omitted.}
}
\description{
This function creates a styled cross table from a given data.frame that
already has cross table format. 
It uses the columns specified in 'subTableCols' to separate the
table body into several sub tables, where each sub table has the current
value in the column defined by 'subTableCols' as sub heading.
The columns specified in 'yCols', 'xCols' and 'valueCols'
define the cross table structure.
The data.frame given in 'data' has already s
If the table should not be a cross table, but a normal table then the 
arguments 'xCols' and 'valueCols should be omitted.
The function is a recursive function that builds that subTables from inside out.
}
