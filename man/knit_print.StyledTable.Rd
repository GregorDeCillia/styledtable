% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/knit_print.R
\name{knit_print.StyledTable}
\alias{knit_print.StyledTable}
\title{Knit-Print StyledTable}
\usage{
\method{knit_print}{StyledTable}(x, ...)
}
\arguments{
\item{x}{A \link[=styled_table]{StyledTable} class object to be printed}

\item{...}{Additional arguments (ignored)}
}
\description{
Add a knit_print method to the \link[=styled_table]{styledTable}
class.
In case the knitting destination is \code{latex}, then a LaTeX text block is printed,
which holds the LaTeX code of the table.
In case the knitting destination is \code{html}, then an HTML text block is printed,
holding the HTML code of the table.
In both cases the dependencies (LaTex and HTML dependencies) will be
automatically added to the \link[knitr:knit_meta]{knitr metadata}.
In the \code{html} case, the the following chunk options are used for printing:
\itemize{
\item \code{tab.cap}: An optional string holding the table caption. If no \code{tab.cap} is
set, then no table caption is created and the table is not listed in the
\strong{list of tables}.
\item \code{label}: If \code{tab.cap} is set, then the chunk label is used as table id in
order to reference to it (using \verb{\\@ref(tab:LABEL)}). If no chunk label
is defined, then the table will not be listed in the \strong{list of tables}.
\item \code{tab.footer}: A character vector holding the strings for the table footer entries.
Each string is placed inside of a \verb{<td>} table element in a separate table row
in the \verb{<tfoot>} part of the table.
\item \code{tab.print}: An optional logical value. If set to \code{FALSE}, then the table
is not printed.
\item \code{tab.add_dummy_table}: An optional logical value. If set to \code{TRUE}, then
an empty \link[knitr:kable]{kable} table is printed before the given table.
This \strong{dummy table} is contained inside of a \verb{<div class="lua-remove">} html-element.
This is a quick fix for the open feature request in
\url{https://github.com/rstudio/pagedown/issues/191},
since only markdown tables are currently supported by the \code{loft.lua} filter
of \code{pagedown}.
As a workaround for this missing feature, we add an empty dummy table before
the desired table and remove it with the \strong{lua-filter}
\code{system.file("lua-filters", "lua_remove.lua", package = "styledTables")}.
}
}
